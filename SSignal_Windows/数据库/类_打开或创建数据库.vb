Imports System.IO
Imports SSignal_Protocols
Imports SSignalDB
Imports SSignal_GlobalCommonCode

Friend Class 类_打开或创建数据库

    Const 常用数据缓存区大小_兆 As Integer = 10

    Public Function 打开或创建用户数据库(ByVal 目录路径 As String) As 类_数据库
        Dim 文件名 As String = 当前用户.英语讯宝地址
        Dim 文件路径 As String = 目录路径 & "\" & 文件名 & 数据库文件扩展名
        Dim 数据库 As 类_数据库 = Nothing
        Dim 数据库类型 As 数据库类型_常量集合 = 数据库类型_常量集合.长期_无需备份
        If File.Exists(文件路径) = True Then
            数据库 = New 类_数据库(文件路径, 数据库类型)
            Try
                数据库.打开(常用数据缓存区大小_兆, 类_数据库.新页缓存文件的处理方式_常量集合.读取)
            Catch ex As Exception
                数据库.关闭()
                数据库 = Nothing
            End Try
        Else
            Try
                文件路径 = 创建数据库文件(目录路径, 文件名, 数据库类型, True)
                数据库 = New 类_数据库(文件路径, 数据库类型)
                数据库.打开(常用数据缓存区大小_兆, 类_数据库.新页缓存文件的处理方式_常量集合.不读取)
            Catch ex As Exception
                If 数据库 IsNot Nothing Then
                    数据库.关闭()
                    数据库 = Nothing
                End If
            End Try
        End If
        If 数据库 IsNot Nothing Then
            Try
                Call 创建表_用户(数据库)
                Call 创建表_最近(数据库)
                Call 创建表_一对一讯宝(数据库)
                Call 创建表_小聊天群讯宝(数据库)
                Call 创建表_大聊天群讯宝(数据库)
                Call 创建表_陌生人讯宝(数据库)
                Call 创建表_群成员主机名(数据库)
                Call 创建表_地址或域编号(数据库)
                Dim I, 最大字数, 最大字数2 As Integer
                For I = 1 To 最大值_常量集合.讯宝文本长度
                    最大字数 = 获取文本库号(I)
                    If 最大字数 <> 最大字数2 Then
                        最大字数2 = 最大字数
                        Call 创建表_文本库(数据库, 最大字数)
                    End If
                Next
            Catch ex As Exception
                数据库.关闭()
                数据库 = Nothing
            End Try
        End If
        Return 数据库
    End Function

    Private Sub 创建表_用户(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "用户"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("英语讯宝地址", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("本国语讯宝地址", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度, 值许可_常量集合.可为空)
            列添加器.添加列_用于创建表("备份文件存放路径", 数据类型_常量集合.nvarchar_双字节变长短文本, 250, 值许可_常量集合.可为空)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_最近(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "最近"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("地址或域名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("群编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("新讯宝数量", 数据类型_常量集合.smallint_短整数)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#地址群编号", True)
            索引.添加排序列("地址或域名")
            索引.添加排序列("群编号")
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#时间")
            索引.添加排序列("时间", True)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_一对一讯宝(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "一对一讯宝"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("讯宝地址", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("是接收者", 数据类型_常量集合.bit_位)
            列添加器.添加列_用于创建表("指令", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("文本库号", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("文本编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("宽度", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("高度", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("秒数", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("已收听", 数据类型_常量集合.bit_位)
            列添加器.添加列_用于创建表("发送序号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("发送时间", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("存储时间", 数据类型_常量集合.bigint_长整数)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#地址存储时间")
            索引.添加排序列("讯宝地址")
            索引.添加排序列("存储时间", True)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#地址是接收者发送序号", True)
            索引.添加排序列("讯宝地址")
            索引.添加排序列("是接收者")
            索引.添加排序列("发送序号")
            Dim 列添加器2 As New 类_列添加器
            列添加器2.添加列_用于筛选器("发送序号", 筛选方式_常量集合.大于, 0)
            Dim 筛选器 As New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#存储时间", True)
            索引.添加排序列("存储时间")
            列添加器2 = New 类_列添加器
            列添加器2.添加列_用于筛选器("发送序号", 筛选方式_常量集合.等于, 0)
            筛选器 = New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#地址是接收者存储时间")
            索引.添加排序列("讯宝地址")
            索引.添加排序列("是接收者")
            索引.添加排序列("存储时间", True)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_小聊天群讯宝(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "小聊天群讯宝"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("群主讯宝地址", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("群编号", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("发送者讯宝地址", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("指令", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("文本库号", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("文本编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("宽度", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("高度", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("秒数", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("已收听", 数据类型_常量集合.bit_位)
            列添加器.添加列_用于创建表("发送序号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("发送时间", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("存储时间", 数据类型_常量集合.bigint_长整数)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#群主编号存储时间")
            索引.添加排序列("群主讯宝地址")
            索引.添加排序列("群编号")
            索引.添加排序列("存储时间", True)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#群主编号发送者发送序号", True)
            索引.添加排序列("群主讯宝地址")
            索引.添加排序列("群编号")
            索引.添加排序列("发送者讯宝地址")
            索引.添加排序列("发送序号")
            Dim 列添加器2 As New 类_列添加器
            列添加器2.添加列_用于筛选器("发送序号", 筛选方式_常量集合.大于, 0)
            Dim 筛选器 As New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#存储时间", True)
            索引.添加排序列("存储时间")
            列添加器2 = New 类_列添加器
            列添加器2.添加列_用于筛选器("发送序号", 筛选方式_常量集合.等于, 0)
            筛选器 = New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#群主编号发送者存储时间")
            索引.添加排序列("群主讯宝地址")
            索引.添加排序列("群编号")
            索引.添加排序列("发送者讯宝地址")
            索引.添加排序列("存储时间", True)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_大聊天群讯宝(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "大聊天群讯宝"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("子域名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.子域名长度)
            列添加器.添加列_用于创建表("群编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("发送者讯宝地址", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("指令", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("文本库号", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("文本编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("宽度", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("高度", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("秒数", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("已收听", 数据类型_常量集合.bit_位)
            列添加器.添加列_用于创建表("发送时间", 数据类型_常量集合.bigint_长整数)

            Dim 索引 As New 类_索引("#子域名群编号发送时间", True)
            索引.添加排序列("子域名")
            索引.添加排序列("群编号")
            索引.添加排序列("发送时间", True)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_陌生人讯宝(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "陌生人讯宝"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("讯宝地址", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("指令", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("文本库号", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("文本编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("发送序号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("发送时间", 数据类型_常量集合.bigint_长整数)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#地址发送序号", True)
            索引.添加排序列("讯宝地址")
            索引.添加排序列("发送序号")
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#发送时间")
            索引.添加排序列("发送时间", True)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_群成员主机名(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "群成员主机名"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("英语讯宝地址", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("主机名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.主机名字符数)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_地址或域编号(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "地址或域编号"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("地址或域", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("编号", 数据类型_常量集合.bigint_长整数)

            Dim 索引 As New 类_索引("#编号", True)
            索引.添加排序列("编号")

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_文本库(ByVal 数据库 As 类_数据库, ByVal 最大字数 As Short)
        Dim 表名 As String = 最大字数 & "库"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("编号", 数据类型_常量集合.bigint_长整数, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("文本", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大字数)
            列添加器.添加列_用于创建表("地址或域编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("群编号", 数据类型_常量集合.bigint_长整数)

            Dim 索引 As New 类_索引("#地址域群编号")
            索引.添加排序列("地址或域编号")
            索引.添加排序列("群编号")
            索引.添加排序列("编号")

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引)
            指令.执行()
        End If
    End Sub


    Friend Function 打开备份数据库(ByVal 路径 As String) As 类_数据库
        Dim 数据库 As 类_数据库 = Nothing
        Dim 数据库类型 As 数据库类型_常量集合 = 数据库类型_常量集合.长期_需备份
        If File.Exists(路径) = True Then
            数据库 = New 类_数据库(路径, 数据库类型, True)
            Try
                数据库.打开(, 类_数据库.新页缓存文件的处理方式_常量集合.读取)
            Catch ex As Exception
                If 数据库 IsNot Nothing Then
                    数据库.关闭()
                    数据库 = Nothing
                End If
            End Try
        End If
        Return 数据库
    End Function

    Public Function 打开或创建备份凭据数据库() As 类_数据库
        Dim 文件名 As String = "凭据_备份数据库时"
        Dim 文件路径 As String = 备份文件存放路径 & "\" & 文件名 & 数据库文件扩展名
        Dim 数据库 As 类_数据库 = Nothing
        Dim 数据库类型 As 数据库类型_常量集合 = 数据库类型_常量集合.长期_无需备份
        If File.Exists(文件路径) = True Then
            数据库 = New 类_数据库(文件路径, 数据库类型)
            Try
                数据库.打开(常用数据缓存区大小_兆, 类_数据库.新页缓存文件的处理方式_常量集合.读取)
            Catch ex As Exception
                数据库.关闭()
                数据库 = Nothing
            End Try
        Else
            Try
                文件路径 = 创建数据库文件(备份文件存放路径, 文件名, 数据库类型, True)
                数据库 = New 类_数据库(文件路径, 数据库类型)
                数据库.打开(常用数据缓存区大小_兆, 类_数据库.新页缓存文件的处理方式_常量集合.不读取)
            Catch ex As Exception
                If 数据库 IsNot Nothing Then
                    数据库.关闭()
                    数据库 = Nothing
                End If
            End Try
        End If
        If 数据库 IsNot Nothing Then
            Try
                Call 创建表_数据库备份凭据(数据库)
                Call 创建表_流星语(数据库)
                Call 创建表_商品(数据库)
            Catch ex As Exception
                数据库.关闭()
                数据库 = Nothing
            End Try
        End If
        Return 数据库
    End Function

    Private Sub 创建表_数据库备份凭据(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "数据库备份凭据"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("子域名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.子域名长度, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("备份凭据", 数据类型_常量集合.char_单字节定长短文本, 20)
            列添加器.添加列_用于创建表("验证数字", 数据类型_常量集合.bigint_长整数)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_流星语(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "流星语"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("子域名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.子域名长度)
            列添加器.添加列_用于创建表("编号", 数据类型_常量集合.bigint_长整数, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("已下载", 数据类型_常量集合.bit_位)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#已发布", True)
            索引.添加排序列("子域名")
            索引.添加排序列("编号", True)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#未下载", True)
            索引.添加排序列("子域名")
            索引.添加排序列("编号")
            Dim 列添加器2 As New 类_列添加器
            列添加器2.添加列_用于筛选器("已下载", 筛选方式_常量集合.等于, False)
            Dim 筛选器 As New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_商品(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "商品"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("编号", 数据类型_常量集合.bigint_长整数, 值许可_常量集合.是主键_降序)
            列添加器.添加列_用于创建表("已下载", 数据类型_常量集合.bit_位)

            Dim 索引 As New 类_索引("#未下载", True)
            索引.添加排序列("编号")
            Dim 列添加器2 As New 类_列添加器
            列添加器2.添加列_用于筛选器("已下载", 筛选方式_常量集合.等于, False)
            Dim 筛选器 As New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引)
            指令.执行()
        End If
    End Sub

End Class
